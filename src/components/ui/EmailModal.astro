---
import JesseButton from "@/components/ui/buttons/JesseButton.astro";

interface Props {
    email: string;
    title: string;
    description: string;
    closeText: string;
}

const { email, title, description, closeText } = Astro.props;
---

<div
    id='email-modal'
    class='fixed inset-0 bg-black bg-opacity-50 z-50 hidden items-center justify-center p-4'
>
    <div
        class='bg-slate-950 border-2 border-slate-800 rounded-2xl shadow-2xl max-w-md w-full mx-4 transform transition-all backdrop-blur-sm'
    >
        <div class='p-8'>
            <!-- Header -->
            <div class='mb-6'>
                <h3
                    class='text-2xl font-bold text-electric-blue font-space-grotesk text-left'
                >
                    {title}
                </h3>
            </div>

            <!-- Description -->
            <p class='text-slate-300 mb-6 text-lg leading-relaxed text-left'>
                {description}
            </p>

            <!-- Email Input Section -->
            <div
                class='bg-slate-900 border border-slate-700 rounded-xl p-3 mb-6'
            >
                <div class='flex items-center space-x-3'>
                    <input
                        type='text'
                        value={email}
                        readonly
                        id='email-input'
                        class='flex-1 bg-transparent border-none outline-none text-electric-blue font-mono text-lg font-bold'
                    />
                    <JesseButton
                        variant='text'
                        size='small'
                        showText={false}
                        class:list={[
                            "!min-w-0 !w-12 !h-12 !p-0 flex items-center justify-center",
                        ]}
                    >
                        <span slot='icon'>
                            <svg
                                class='w-6 h-6'
                                fill='none'
                                stroke='currentColor'
                                viewBox='0 0 24 24'
                            >
                                <path
                                    stroke-linecap='round'
                                    stroke-linejoin='round'
                                    stroke-width='2'
                                    d='M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z'
                                ></path>
                            </svg>
                        </span>
                    </JesseButton>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class='flex justify-end space-x-4'>
                <button
                    id='close-email-modal-btn'
                    class='px-6 py-3 text-slate-400 hover:text-electric-blue transition-colors font-medium'
                >
                    {closeText}
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .font-space-grotesk {
        font-family: "Space Grotesk", sans-serif;
    }

    .text-electric-blue {
        color: #3b82f6;
    }

    .bg-slate-950 {
        background-color: #020617;
    }

    .bg-slate-900 {
        background-color: #0f172a;
    }

    .border-slate-800 {
        border-color: #1e293b;
    }

    .border-slate-700 {
        border-color: #334155;
    }

    .text-slate-300 {
        color: #cbd5e1;
    }

    .text-slate-400 {
        color: #94a3b8;
    }

    .hover\:bg-slate-800:hover {
        background-color: #1e293b;
    }

    .hover\:text-electric-blue:hover {
        color: #3b82f6;
    }

    .jesse-btn.is-copied,
    .jesse-btn.is-copied:hover {
        background: #3b82f6;
        color: white;
        transform: translateY(-2px);
        box-shadow:
            0 4px 0 0 #1e293b,
            0 1px 8px 0 #0f172a;
    }
</style>

<script>
    function showEmailModal(email: string) {
        const modal = document.getElementById("email-modal") as HTMLElement;
        const emailInput = document.getElementById(
            "email-input",
        ) as HTMLInputElement;

        if (modal && emailInput) {
            emailInput.value = email;
            modal.classList.remove("hidden");
            modal.classList.add("flex");

            // Focus on input for better UX
            setTimeout(() => emailInput.focus(), 100);
        }
    }

    function hideEmailModal() {
        const modal = document.getElementById("email-modal") as HTMLElement;
        if (modal) {
            modal.classList.add("hidden");
            modal.classList.remove("flex");
        }
    }

    function copyEmailToClipboard() {
        const emailInput = document.getElementById(
            "email-input",
        ) as HTMLInputElement;
        const copyBtn = document.querySelector(
            "#email-modal .jesse-btn",
        ) as HTMLElement;

        if (!emailInput || !copyBtn) return;

        emailInput.select();
        emailInput.setSelectionRange(0, 99999);

        const showConfirmation = () => {
            copyBtn.classList.add("is-copied");

            setTimeout(() => {
                copyBtn.classList.remove("is-copied");
            }, 1500);
        };

        try {
            document.execCommand("copy");
            showConfirmation();
        } catch (err) {
            navigator.clipboard
                .writeText(emailInput.value)
                .then(showConfirmation)
                .catch(() => {
                    emailInput.select();
                });
        }
    }

    // Event listeners
    document.addEventListener("DOMContentLoaded", () => {
        const closeButtons = document.querySelectorAll(
            "#close-email-modal-btn",
        );
        const copyButton = document.querySelector("#email-modal .jesse-btn");
        const modal = document.getElementById("email-modal");

        closeButtons.forEach((btn) => {
            btn.addEventListener("click", hideEmailModal);
        });

        if (copyButton) {
            copyButton.addEventListener("click", copyEmailToClipboard);
        }

        // Close modal when clicking outside
        if (modal) {
            modal.addEventListener("click", (e) => {
                if (e.target === modal) {
                    hideEmailModal();
                }
            });
        }

        // Close modal with Escape key
        document.addEventListener("keydown", (e) => {
            if (e.key === "Escape") {
                hideEmailModal();
            }
        });
    });

    // Make functions globally available
    (window as any).showEmailModal = showEmailModal;
    (window as any).hideEmailModal = hideEmailModal;
</script>
