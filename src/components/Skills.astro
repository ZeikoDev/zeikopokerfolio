---
import { Card } from "@heroui/react";

const royalFlushSkills = [
  {
    value: "A",
    skill: "React",
    description: "Modern web apps and component-driven UIs.",
  },
  {
    value: "K",
    skill: "TypeScript",
    description: "Type-safe, scalable JavaScript for robust apps.",
  },
  {
    value: "Q",
    skill: "Node.js",
    description: "Backend APIs, real-time services, and tooling.",
  },
  {
    value: "J",
    skill: "PostgreSQL",
    description: "Relational data modeling and advanced queries.",
  },
  {
    value: "T",
    skill: "React Native",
    description: "Cross-platform mobile apps with native feel.",
  },
];

const otherSkills = [
  // Frontend
  { name: "JavaScript/TypeScript", category: "Frontend" },
  { name: "HTML & CSS", category: "Frontend" },
  { name: "TailwindCSS", category: "Frontend" },
  // Backend
  { name: "Python", category: "Backend" },
  { name: "Django", category: "Backend" },
  { name: "REST API", category: "Backend" },
  // Database
  { name: "MongoDB", category: "Database" },
  // Cloud/DevOps
  { name: "AWS (EC2, S3)", category: "Cloud" },
  { name: "Firebase/Firestore", category: "Cloud" },
  // Tools
  { name: "Git/GitHub", category: "Tools" },
  { name: "Testing (Jest)", category: "Tools" },
  // Design
  { name: "UX/UI Design", category: "Design" },
];

---

<section
  id='skills'
  class='py-section mt-24 bg-gradient-to-b from-slate-950 to-blue-900 exclusive-section'
>
  <div class='max-w-content mx-auto px-4'>
    <h2 class='text-4xl font-bold text-electric-blue text-center mb-16'>
      Royal Flush Tech Stack
    </h2>
    <div class='flex justify-center gap-6 flex-wrap mb-16 royal-flush-row'>
      {
        royalFlushSkills.map((card, idx) => (
          <div
            class={`relative bg-slate-900/80 border-2 border-blue-700 rounded-xl w-40 h-64 flex flex-col justify-between shadow-lg poker-card flop-card-animate`}
            style={`animation-delay: ${idx * 0.25}s;`}
          >
            <div class='flex justify-between items-center px-4 pt-3'>
              <span class='text-2xl font-bold text-electric-blue'>
                {card.value}
              </span>
              <span class='text-2xl text-electric-blue'>♦</span>
            </div>
            <div class='flex-1 flex flex-col items-center justify-center px-4'>
              <span class='royal-flush-title text-off-white mb-2 text-center'>
                {card.skill}
              </span>
              <span class='text-sm text-light-gray text-center'>
                {card.description}
              </span>
            </div>
            <div class='flex justify-between items-center px-4 pb-3 rotate-180'>
              <span class='text-2xl font-bold text-electric-blue'>
                {card.value}
              </span>
              <span class='text-2xl text-electric-blue'>♦</span>
            </div>
          </div>
        ))
      }
    </div>
    <!-- Other Skills Grid -->
    <div class='grid md:grid-cols-3 gap-8'>
      {
        otherSkills.map((skill) => (
          <Card
            client:visible
            className='flex flex-col items-start p-6 bg-slate-900/80 border border-blue-700/20 rounded-xl shadow'
          >
            <h3 class='text-xl font-bold text-off-white mb-1'>{skill.name}</h3>
            <p class='text-electric-blue text-xs mb-2'>{skill.category}</p>
          </Card>
        ))
      }
    </div>
  </div>
</section>

<style>
  .poker-card {
    background: linear-gradient(135deg, #1e293b 60%, #334155 100%);
    transition:
      transform 0.2s,
      box-shadow 0.2s;
    pointer-events: none;
  }
  .flop-animate .poker-card {
    pointer-events: auto;
  }
  .poker-card:hover {
    /* Only magnify if .flopped is present */
  }
  .flopped.poker-card:hover {
    transform: translateY(-8px) scale(1.04) !important;
    box-shadow: 0 8px 32px 0 rgba(59, 130, 246, 0.25) !important;
  }
  .flop-card-animate {
    opacity: 0;
    transform: translateX(-80px) rotateY(90deg);
  }
  .flop-animate .flop-card-animate {
    animation: flop-slide-flip 1.2s cubic-bezier(0.7, 0.2, 0.2, 1) forwards;
  }
  @keyframes flop-slide-flip {
    0% {
      opacity: 0;
      transform: translateX(-80px) rotateY(90deg);
    }
    60% {
      opacity: 1;
      transform: translateX(0) rotateY(90deg);
    }
    100% {
      opacity: 1;
      transform: translateX(0) rotateY(0deg);
    }
  }
  .royal-flush-title {
    font-size: 1.35rem;
    font-weight: 700;
    line-height: 1.1;
    word-break: normal;
    white-space: normal;
  }
</style>

<script>
  // Intersection Observer for flop animation
  if (typeof window !== "undefined") {
    const section = document.querySelector("#skills .royal-flush-row");
    if (section) {
      const observer = new window.IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              section.classList.add("flop-animate");
              // Add .flopped to each card after its animation ends and remove the animation class
              const cards = section.querySelectorAll(".poker-card");
              cards.forEach((card) => {
                card.addEventListener(
                  "animationend",
                  () => {
                    card.classList.add("flopped");
                    card.classList.remove("flop-card-animate");
                  },
                  { once: true },
                );
              });
              observer.disconnect();
            }
          });
        },
        { threshold: 0.3 },
      );
      observer.observe(section);
    }
  }
</script>
